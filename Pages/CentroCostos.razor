@page "/centro"
@using System.ComponentModel.DataAnnotations
@using System.Net.Http
@using Newtonsoft.Json;
@using TTHHApp_Blazor.Models
@using System.Text.Json.Serialization;




<h3>CentroCostos</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <p>@ErrorMessage</p>
    <p>@Exito</p>
}

@if (!string.IsNullOrEmpty(ApiResponse))
{
    <table class="table">
        <thead>
            <tr>
                <th>Codigo</th>
                <th>Nombre Centro de Costos</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var centrocostosItem in CentroCostosView)
            {
                <tr>
                    <td>@centrocostosItem.Codigo</td>
                    <td>@centrocostosItem.NombreCentroCostos</td>
                </tr>
            }
        </tbody>
    </table>
}



<button class="btn btn-primary" @onclick="Mostrar">Mostrar centros de costo</button>

<div>
    <p>Codigo: <input type="text" @bind="@cod" /></p>
</div>

<div>
    <p>Descripcion: <input type="text" @bind="@descripcion" /></p>
</div>

<button class="btn btn-primary" @onclick="Ingresar">Ingresar centro de costo</button>
<button class="btn btn-primary" @onclick="Eliminar">Eliminar centro de costo</button>
<button class="btn btn-primary" @onclick="Actualizar">Actualizar centro de costo</button>
<button class="btn btn-primary" @onclick="Buscar">Buscar centro de costo</button>

<!--Atributos del usuario-->



@code {
    private List<CentroCosto> CentroCostosView { get; set; }
    //Variables api
    private string cod { get; set; }
    private string descripcion { get; set; }
    private string ErrorMessage { get; set; }
    private string Exito { get; set; }
    private string ApiResponse { get; set; }


    //Atributos de usuario




    private async void Mostrar()
    {


        try
        {
            using (var client = new HttpClient())
            {
                var url = "http://apiservicios.ecuasolmovsa.com:3009/api/Varios/CentroCostosSelect";
                var response = await client.GetAsync(url);

                if (response.IsSuccessStatusCode)
                {
                    Exito = "Exitoso";
                    ApiResponse = await response.Content.ReadAsStringAsync();

                    var centrocostos = JsonConvert.DeserializeObject<List<CentroCosto>>(ApiResponse);
                    CentroCostosView = centrocostos;

                }
                else
                {
                    ErrorMessage = "Error en la solicitud";
                }
            }
        }
        catch (HttpRequestException ex)
        {
            ErrorMessage = "Se produjo un error en la solicitud: " + ex.Message;
            Console.WriteLine(ex.ToString());
        }
    }



    private async void Ingresar()
    {
        try
        {
            using (var client = new HttpClient())
            {

                var url = $"http://apiservicios.ecuasolmovsa.com:3009/api/Varios/CentroCostosInsert?codigocentrocostos=" + cod + "&descripcioncentrocostos=" + descripcion;
                var response = await client.GetAsync(url);


                if (response.IsSuccessStatusCode)
                {
                    //await MessageBox.Show("Este es un mensaje de ejemplo");
                    Exito = "Exitoso";
                    ApiResponse = await response.Content.ReadAsStringAsync();

                }

                else
                {
                    // Manejar la respuesta de error de la API según sea necesario
                    ErrorMessage = "Error en la solicitud";
                }
            }
        }
        catch (HttpRequestException ex)
        {
            ErrorMessage = "Se produjo un error en la solicitud: " + ex.Message;
            Console.WriteLine(ex.ToString());
            //await JSRuntime.InvokeVoidAsync("alert", "¡Fallo al iniciar sesión! Razón: " + ex.Message);
        }
    }

    private async void Eliminar()
    {
        try
        {
            using (var client = new HttpClient())
            {

                var url = $"http://apiservicios.ecuasolmovsa.com:3009/api/Varios/CentroCostosDelete?codigocentrocostos=" + cod + "&descripcioncentrocostos=" + descripcion;
                //var url = "http://apiservicios.ecuasolmovsa.com:3009/api/Varios/GetEmisor";
                var response = await client.GetAsync(url);


                if (response.IsSuccessStatusCode)
                {
                    //await MessageBox.Show("Este es un mensaje de ejemplo");
                    Exito = "Exitoso";
                    ApiResponse = await response.Content.ReadAsStringAsync();

                }

                else
                {
                    // Manejar la respuesta de error de la API según sea necesario
                    ErrorMessage = "Error en la solicitud";
                }
            }
        }
        catch (HttpRequestException ex)
        {
            ErrorMessage = "Se produjo un error en la solicitud: " + ex.Message;
            Console.WriteLine(ex.ToString());
            //await JSRuntime.InvokeVoidAsync("alert", "¡Fallo al iniciar sesión! Razón: " + ex.Message);
        }
    }

    private async void Actualizar()
    {
        try
        {
            using (var client = new HttpClient())
            {

                var url = $"http://apiservicios.ecuasolmovsa.com:3009/api/Varios/CentroCostosUpdate?codigocentrocostos=" + cod + "&descripcioncentrocostos=" + descripcion;
                //var url = "http://apiservicios.ecuasolmovsa.com:3009/api/Varios/GetEmisor";
                var response = await client.GetAsync(url);


                if (response.IsSuccessStatusCode)
                {
                    //await MessageBox.Show("Este es un mensaje de ejemplo");
                    Exito = "Exitoso";
                    ApiResponse = await response.Content.ReadAsStringAsync();

                }

                else
                {
                    // Manejar la respuesta de error de la API según sea necesario
                    ErrorMessage = "Error en la solicitud";
                }
            }
        }
        catch (HttpRequestException ex)
        {
            ErrorMessage = "Se produjo un error en la solicitud: " + ex.Message;
            Console.WriteLine(ex.ToString());
            //await JSRuntime.InvokeVoidAsync("alert", "¡Fallo al iniciar sesión! Razón: " + ex.Message);
        }
    }

    private async void Buscar()
    {
        try
        {
            using (var client = new HttpClient())
            {
                
                var url = $"http://apiservicios.ecuasolmovsa.com:3009/api/Varios/CentroCostosSearch?descripcioncentrocostos=" + descripcion;
                //var url = "http://apiservicios.ecuasolmovsa.com:3009/api/Varios/GetEmisor";
                var response = await client.GetAsync(url);


                if (response.IsSuccessStatusCode)
                {
                    //await MessageBox.Show("Este es un mensaje de ejemplo");
                    Exito = "Exitoso";
                    ApiResponse = await response.Content.ReadAsStringAsync();

                }

                else
                {
                    // Manejar la respuesta de error de la API según sea necesario
                    ErrorMessage = "Error en la solicitud";
                }
            }
        }
        catch (HttpRequestException ex)
        {
            ErrorMessage = "Se produjo un error en la solicitud: " + ex.Message;
            Console.WriteLine(ex.ToString());
            //await JSRuntime.InvokeVoidAsync("alert", "¡Fallo al iniciar sesión! Razón: " + ex.Message);
        }
    }

}

