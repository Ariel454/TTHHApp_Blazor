@page "/login"
@using System.ComponentModel.DataAnnotations
@using System.Net.Http
@using Newtonsoft.Json;
@using TTHHApp_Blazor.Models;
@using System.Text.Json.Serialization;



<h1>Login</h1>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <p>@ErrorMessage</p>
    <p>@Exito</p>
}

@if (!string.IsNullOrEmpty(ApiResponse))
{
        <p>Respuesta de la API: @ApiResponse</p>
}


<div>
    <p>Usuario: <input type="text" @bind="@Username" /></p>
</div>

<div>
    <p>Contraseña: <input type="password" @bind="@Password" /></p>
</div>

<button class="btn btn-primary" @onclick="IniciarSesion">Iniciar sesión</button>

@if (!string.IsNullOrEmpty(NOMBREUSUARIO))
{
    <p>@NOMBREUSUARIO</p>
    <p>@PERFIL</p>
    <p>@OBSERVACION</p>
    <p>@CODIGOPERFIL</p>
    <p>@ESTADO</p>
    <p>@PERFIL</p>
}


@code {
    //Variables api
    private string Username { get; set; }
    private string Password { get; set; }
    private string ErrorMessage { get; set; }
    private string Exito { get; set; }
    private string ApiResponse { get; set; }
    //Atributos de usuario
    private string NOMBREUSUARIO { get; set; }
    private string PERFIL { get; set; }
    private string OBSERVACION { get; set; }
    private int CODIGOPERFIL { get; set; }
    private string ESTADO { get; set; }
    private int COMPANIA { get; set; }
    private int Emisor { get; set; }
    private int Cargo { get; set; }
    private string NOMBREEMISOR { get; set; }
    private string NOMBRECOMPANIA { get; set; }
    private string USUARIOCLIENTE { get; set; }
    private string RucUsuario { get; set; }

    private HttpClient HttpClient { get; set; }

    private async void IniciarSesion()
    {
        try
        {
            using (var client = new HttpClient())
            {
                var url = $"http://apiservicios.ecuasolmovsa.com:3009/api/Usuarios?usuario=" + Username + "&password=" + Password;
                //var url = "http://apiservicios.ecuasolmovsa.com:3009/api/Varios/GetEmisor";
                var response = await client.GetAsync(url);


                if (response.IsSuccessStatusCode)
                {
                    //await MessageBox.Show("Este es un mensaje de ejemplo");
                    Exito = "Exitoso";
                    ApiResponse = await response.Content.ReadAsStringAsync();

                    var usuarios = JsonConvert.DeserializeObject<List<Usuario>>(ApiResponse);

                    if (usuarios.Count > 0)
                    {
                        var usuario = usuarios[0];
                        NOMBREUSUARIO = usuario.NOMBREUSUARIO;
                        // Resto del código para manejar el inicio de sesión exitoso
                    }
                }

                else
                {
                    // Manejar la respuesta de error de la API según sea necesario
                    ErrorMessage = "Error en la solicitud";
                }
            }
        }
        catch (HttpRequestException ex)
        {
            ErrorMessage = "Se produjo un error en la solicitud: " + ex.Message;
            Console.WriteLine(ex.ToString());
            //await JSRuntime.InvokeVoidAsync("alert", "¡Fallo al iniciar sesión! Razón: " + ex.Message);
        }
    }
}

